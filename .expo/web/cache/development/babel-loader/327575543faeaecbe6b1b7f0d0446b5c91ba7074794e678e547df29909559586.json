{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useState } from 'react';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction EmojiList(_ref) {\n  var onSelect = _ref.onSelect,\n    onCloseModal = _ref.onCloseModal;\n  var _useState = useState([require(\"../assets/images/emoji1.png\"), require(\"../assets/images/emoji2.png\"), require(\"../assets/images/emoji3.png\"), require(\"../assets/images/emoji4.png\"), require(\"../assets/images/emoji5.png\"), require(\"../assets/images/emoji6.png\")]),\n    _useState2 = _slicedToArray(_useState, 1),\n    emoji = _useState2[0];\n  return _jsx(FlatList, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: Platform.OS === 'web',\n    data: emoji,\n    contentContainerStyle: styles.listContainer,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n        index = _ref2.index;\n      return _jsx(Pressable, {\n        onPress: function onPress() {\n          onSelect(item);\n          onCloseModal();\n        },\n        children: _jsx(Image, {\n          source: item,\n          style: styles.image\n        }, index)\n      });\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  listContainer: {\n    borderTopRightRadius: 10,\n    borderTopLeftRadius: 10,\n    paddingHorizontal: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginRight: 20\n  }\n});\nexport default EmojiList;","map":{"version":3,"names":["useState","React","jsx","_jsx","EmojiList","_ref","onSelect","onCloseModal","_useState","require","_useState2","_slicedToArray","emoji","FlatList","horizontal","showsHorizontalScrollIndicator","Platform","OS","data","contentContainerStyle","styles","listContainer","renderItem","_ref2","item","index","Pressable","onPress","children","Image","source","style","image","StyleSheet","create","borderTopRightRadius","borderTopLeftRadius","paddingHorizontal","flexDirection","alignItems","justifyContent","width","height","marginRight"],"sources":["D:/react-native/stickerSmash/components/EmojiList.js"],"sourcesContent":["import { FlatList, Pressable, StyleSheet, Image, Platform } from \"react-native\";\r\nimport {useState} from 'react';\r\n\r\nimport React from 'react'\r\n\r\nfunction EmojiList({ onSelect, onCloseModal}) {\r\n    const [emoji] = useState([\r\n        require('../assets/images/emoji1.png'),\r\n        require('../assets/images/emoji2.png'),\r\n        require('../assets/images/emoji3.png'),\r\n        require('../assets/images/emoji4.png'),\r\n        require('../assets/images/emoji5.png'),\r\n        require('../assets/images/emoji6.png'),\r\n    ])\r\n  return (\r\n    <FlatList horizontal showsHorizontalScrollIndicator={Platform.OS === 'web'} data={emoji} contentContainerStyle={styles.listContainer}\r\n        renderItem={({ item, index }) => {\r\n            // console.log(item);\r\n        return (\r\n            <Pressable onPress={() => {\r\n                onSelect(item);\r\n                onCloseModal();\r\n            }}>\r\n            <Image source={item} key={index} style={styles.image} />\r\n            </Pressable>\r\n        );\r\n        }}\r\n    />\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n    listContainer: {\r\n      borderTopRightRadius: 10,\r\n      borderTopLeftRadius: 10,\r\n      paddingHorizontal: 20,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    image: {\r\n      width: 100,\r\n      height: 100,\r\n      marginRight: 20,\r\n    },\r\n})  \r\n\r\nexport default EmojiList\r\n"],"mappings":";;;;;;AACA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEzB,SAASC,SAASA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;EACvC,IAAAC,SAAA,GAAgBR,QAAQ,CAAC,CACrBS,OAAO,8BAA8B,CAAC,EACtCA,OAAO,8BAA8B,CAAC,EACtCA,OAAO,8BAA8B,CAAC,EACtCA,OAAO,8BAA8B,CAAC,EACtCA,OAAO,8BAA8B,CAAC,EACtCA,OAAO,8BAA8B,CAAC,CACzC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAPKI,KAAK,GAAAF,UAAA;EAQd,OACEP,IAAA,CAACU,QAAQ;IAACC,UAAU;IAACC,8BAA8B,EAAEC,QAAQ,CAACC,EAAE,KAAK,KAAM;IAACC,IAAI,EAAEN,KAAM;IAACO,qBAAqB,EAAEC,MAAM,CAACC,aAAc;IACjIC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAqB;MAAA,IAAlBC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;MAE1B,OACItB,IAAA,CAACuB,SAAS;QAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;UACtBrB,QAAQ,CAACkB,IAAI,CAAC;UACdjB,YAAY,CAAC,CAAC;QAClB,CAAE;QAAAqB,QAAA,EACFzB,IAAA,CAAC0B,KAAK;UAACC,MAAM,EAAEN,IAAK;UAAaO,KAAK,EAAEX,MAAM,CAACY;QAAM,GAA3BP,KAA6B;MAAC,CAC7C,CAAC;IAEhB;EAAE,CACL,CAAC;AAEN;AACA,IAAML,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC7Bb,aAAa,EAAE;IACbc,oBAAoB,EAAE,EAAE;IACxBC,mBAAmB,EAAE,EAAE;IACvBC,iBAAiB,EAAE,EAAE;IACrBC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDR,KAAK,EAAE;IACLS,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,WAAW,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAevC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}