{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport ImageViewer from \"./components/imageViewer\";\nimport Button from \"./components/Button\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport CircleButton from \"./components/CircleButton\";\nimport IconButton from \"./components/IconButton\";\nimport EmojiPicker from \"./components/EmojiPicker\";\nimport EmojiList from \"./components/EmojiList\";\nimport EmojiSticker from \"./components/EmojiSticker\";\nimport * as MediaLibrary from 'expo-media-library';\nimport { captureRef } from 'react-native-view-shot';\nimport domtoimage from 'dom-to-image';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar imagePlaceHolder = require(\"./assets/images/background-image.png\");\nexport default function App() {\n  var ImageRef = useRef();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedImage = _useState2[0],\n    setSelectedImage = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showAppOption = _useState4[0],\n    setShowAppOption = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isModalVisible = _useState6[0],\n    setIsModelVisible = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    pickedEmoji = _useState8[0],\n    setPickedEmoji = _useState8[1];\n  var _MediaLibrary$usePerm = MediaLibrary.usePermissions(),\n    _MediaLibrary$usePerm2 = _slicedToArray(_MediaLibrary$usePerm, 2),\n    status = _MediaLibrary$usePerm2[0],\n    requestPermission = _MediaLibrary$usePerm2[1];\n  var PickerImageAsync = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n        quality: 1\n      });\n      if (!result.canceled) {\n        setSelectedImage(result.assets[0].uri);\n        setShowAppOption(true);\n      } else {\n        alert('You did not select any image');\n      }\n    });\n    return function PickerImageAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onReset = function onReset() {\n    setShowAppOption(false);\n  };\n  var onAddStickers = function onAddStickers() {\n    setIsModelVisible(true);\n  };\n  var onSaveImageAsync = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (Platform !== '') try {\n        var localUri = yield captureRef(ImageRef, {\n          height: 440,\n          quality: 1\n        });\n        yield MediaLibrary.saveToLibraryAsync(localUri);\n        if (localUri) {\n          alert(\"Saved!\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    return function onSaveImageAsync() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onModalClose = function onModalClose() {\n    setIsModelVisible(false);\n  };\n  if (status === null) {\n    requestPermission();\n  }\n  return _jsxs(GestureHandlerRootView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.imageContainer,\n      children: _jsxs(View, {\n        ref: ImageRef,\n        collapsable: false,\n        children: [_jsx(ImageViewer, {\n          placeholderImageSource: imagePlaceHolder,\n          selectedImage: selectedImage\n        }), pickedEmoji !== null ? _jsx(EmojiSticker, {\n          imageSize: 40,\n          stickerSource: pickedEmoji\n        }) : null]\n      })\n    }), showAppOption ? _jsx(View, {\n      style: styles.optionsContainer,\n      children: _jsxs(View, {\n        style: styles.optionsRow,\n        children: [_jsx(IconButton, {\n          icon: \"refresh\",\n          label: \"Reset\",\n          onPress: onReset\n        }), _jsx(CircleButton, {\n          onPress: onAddStickers\n        }), _jsx(IconButton, {\n          icon: \"save-alt\",\n          label: \"Save\",\n          onPress: onSaveImageAsync\n        })]\n      })\n    }) : _jsxs(View, {\n      style: styles.footerContainer,\n      children: [_jsx(Button, {\n        label: \"Choose a photo\",\n        theme: \"primary\",\n        onPress: PickerImageAsync\n      }), _jsx(Button, {\n        label: \"Use this photo\",\n        onPress: function onPress() {\n          return setShowAppOption(true);\n        }\n      })]\n    }), _jsx(EmojiPicker, {\n      isVisible: isModalVisible,\n      onClose: onModalClose,\n      children: _jsx(EmojiList, {\n        onSelect: setPickedEmoji,\n        onCloseModal: onModalClose\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#25292e',\n    alignItems: 'center'\n  },\n  imageContainer: {\n    flex: 1,\n    paddingTop: 58\n  },\n  footerContainer: {\n    flex: 1 / 3,\n    alignItems: 'center'\n  },\n  optionsContainer: {\n    position: 'absolute',\n    top: 650\n  },\n  optionsRow: {\n    alignItems: 'center',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["StatusBar","Pressable","StyleSheet","View","GestureHandlerRootView","ImageViewer","Button","ImagePicker","useState","useRef","CircleButton","IconButton","EmojiPicker","EmojiList","EmojiSticker","MediaLibrary","captureRef","domtoimage","Platform","jsx","_jsx","jsxs","_jsxs","imagePlaceHolder","require","App","ImageRef","_useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","_useState3","_useState4","showAppOption","setShowAppOption","_useState5","_useState6","isModalVisible","setIsModelVisible","_useState7","_useState8","pickedEmoji","setPickedEmoji","_MediaLibrary$usePerm","usePermissions","_MediaLibrary$usePerm2","status","requestPermission","PickerImageAsync","_ref","_asyncToGenerator","result","launchImageLibraryAsync","allowsEditing","quality","canceled","assets","uri","alert","apply","arguments","onReset","onAddStickers","onSaveImageAsync","_ref2","localUri","height","saveToLibraryAsync","e","console","log","onModalClose","style","styles","container","children","imageContainer","ref","collapsable","placeholderImageSource","imageSize","stickerSource","optionsContainer","optionsRow","icon","label","onPress","footerContainer","theme","isVisible","onClose","onSelect","onCloseModal","create","flex","backgroundColor","alignItems","paddingTop","position","top","flexDirection"],"sources":["D:/react-native/stickerSmash/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { Pressable, StyleSheet, View } from 'react-native';\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\n\n\nimport ImageViewer from './components/imageViewer';\nimport Button from './components/Button';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useState } from 'react';\nimport { useRef } from 'react';\n\nimport CircleButton from './components/CircleButton';\nimport IconButton from './components/IconButton';\nimport EmojiPicker from './components/EmojiPicker';\nimport EmojiList from './components/EmojiList';\nimport EmojiSticker from './components/EmojiSticker';\nimport * as MediaLibrary from 'expo-media-library';\nimport { captureRef } from 'react-native-view-shot';\nimport domtoimage from 'dom-to-image';\nimport { Platform  } from 'react-native';\n\n\n\nconst imagePlaceHolder = require('./assets/images/background-image.png')\n\nexport default function App() {\n  const ImageRef = useRef();\n  const [ selectedImage, setSelectedImage ] = useState(null);\n  const [ showAppOption,setShowAppOption ] = useState(false);\n  const [ isModalVisible, setIsModelVisible] = useState(false);\n  const [pickedEmoji, setPickedEmoji] = useState(null);\n  // console.log(pickedEmoji);\n  const [ status, requestPermission] = MediaLibrary.usePermissions();\n\n  const PickerImageAsync = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      quality: 1,\n    });\n\n    if(!result.canceled){\n       setSelectedImage(result.assets[0].uri)\n       setShowAppOption(true)\n    } else{\n      alert('You did not select any image')\n    }\n  }\n\n  const onReset = () => {\n    setShowAppOption(false);\n  }\n\n  const onAddStickers = () =>{\n    setIsModelVisible(true)\n  }\n \n  const onSaveImageAsync = async () =>{\n  if(Platform!== '')  \n    try {\n      const localUri = await captureRef(ImageRef, {\n        height: 440,\n        quality: 1,\n      });\n\n      await MediaLibrary.saveToLibraryAsync(localUri);\n      if (localUri) {\n        alert(\"Saved!\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  const onModalClose = () =>{\n    setIsModelVisible(false)\n  }\n  \n  if(status === null){\n    requestPermission()\n  }\n  \n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <View style={styles.imageContainer}>\n        <View ref={ImageRef} collapsable={false}>\n      <ImageViewer placeholderImageSource={imagePlaceHolder} selectedImage={selectedImage}/>\n      {pickedEmoji !== null ? \n                <EmojiSticker imageSize={40} stickerSource={pickedEmoji} /> : null}\n        </View>\n      </View>\n\n      {showAppOption? (\n        <View style={styles.optionsContainer}>\n              <View style={styles.optionsRow}>\n                  <IconButton icon='refresh' label='Reset' onPress={onReset}/>\n                    <CircleButton onPress={onAddStickers}/>\n                  <IconButton icon='save-alt' label='Save' onPress={onSaveImageAsync}/>\n              </View>\n        </View>\n\n      ): ( <View style={styles.footerContainer}>\n      <Button label='Choose a photo' theme='primary' onPress={PickerImageAsync}/>\n      <Button label='Use this photo' onPress={()=> setShowAppOption(true)}/>\n    </View>\n  )}\n     <EmojiPicker isVisible={isModalVisible} onClose={onModalClose}>\n      <EmojiList onSelect={setPickedEmoji} onCloseModal={onModalClose}/>\n      </EmojiPicker>\n     \n      <StatusBar style=\"auto\" />\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#25292e',\n    alignItems: 'center',\n  },\n\n  imageContainer: {\n    flex: 1,\n    paddingTop: 58,\n  },\n\n  footerContainer: {\n    flex: 1/3,\n    alignItems: 'center',\n  },\n\n  optionsContainer: {\n    position:'absolute',\n    top: 650,\n  },\n\n  optionsRow: {\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  \n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}